{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/wikiup/client/src/components/item.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { gql, useLazyQuery } from '@apollo/client';\nconst GETITEM = gql`\n\tquery GetItem($id: ID!) {\n\t\tgetItem(id: $id){\n\t\t\tid\n\t\t\ttitle\n\t\t\ttext\n\t\t\tsort\n\t\t\tparentId\n\t\t}\n\t}\n`;\nexport default (props => {\n  console.log(props);\n  const [loadGreeting, {\n    called,\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GETITEM, {\n    variables: {\n      id: props.id ? props.id : props.match.params.id\n    }\n  });\n  if (called && loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 32\n    }\n  }, \"Loading1...\");\n  if (error) return `Error! ${error}`;\n  const article = data ? data.getItem : null;\n  return article ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, article.title), /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, article.text)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, \"Loading...\");\n});","map":{"version":3,"sources":["/Users/irisha/wikiup/client/src/components/item.js"],"names":["React","Typography","gql","useLazyQuery","GETITEM","props","console","log","loadGreeting","called","loading","error","data","variables","id","match","params","article","getItem","title","text"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AAEA,MAAMC,OAAO,GAAGF,GAAI;;;;;;;;;;CAApB;AAYA,gBAAgBG,KAAD,IAAW;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM,CAAEG,YAAF,EAAgB;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,GAAhB,IAAoDT,YAAY,CAACC,OAAD,EAAU;AAC/ES,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAET,KAAK,CAACS,EAAN,GAAWT,KAAK,CAACS,EAAjB,GAAsBT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBF;AAA9C;AADoE,GAAV,CAAtE;AAIA,MAAIL,MAAM,IAAIC,OAAd,EAAuB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACvB,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AAGX,QAAMM,OAAO,GAAGL,IAAI,GAAGA,IAAI,CAACM,OAAR,GAAkB,IAAtC;AAEA,SAAOD,OAAO,gBACP,uDACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,CAACE,KADb,CADA,eAIA,oBAAC,UAAD;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,YAAY,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACG,IADb,CAJA,CADO,gBAUb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVD;AAYA,CAzBD","sourcesContent":["\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { gql, useLazyQuery } from '@apollo/client';\n\nconst GETITEM = gql`\n\tquery GetItem($id: ID!) {\n\t\tgetItem(id: $id){\n\t\t\tid\n\t\t\ttitle\n\t\t\ttext\n\t\t\tsort\n\t\t\tparentId\n\t\t}\n\t}\n`;\n\nexport default (props) => {\n\tconsole.log(props)\n\n\tconst [ loadGreeting, {called, loading, error, data}  ] = useLazyQuery(GETITEM, {\n\t\tvariables: {id: props.id ? props.id : props.match.params.id}\n\t});\n\n\tif (called && loading) return <p>Loading1...</p>\n\tif (error) return `Error! ${error}`;\n\n\n\tconst article = data ? data.getItem : null;\n\n\treturn article ? (\n        <>\n        <Typography variant=\"h4\" component=\"h3\" gutterBottom>\n            {article.title}\n        </Typography>\n        <Typography paragraph gutterBottom>\n            {article.text}\n        </Typography>\n        </>\n\t) : (\n\t\t<div>Loading...</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}