{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/wikiup/client/src/components/item.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { gql, useLazyQuery } from '@apollo/client';\nconst GETITEM = gql`\n\tquery GetItem($id: ID!) {\n\t\tgetItem(id: $id){\n\t\t\tid\n\t\t\ttitle\n\t\t\ttext\n\t\t\tsort\n\t\t}\n\t}\n`;\nexport default (props => {\n  console.log(id);\n  const [loadGreeting, {\n    called,\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GETITEM, {\n    variables: {\n      id: props.id ? props.id : props.match.params.id\n    }\n  });\n  let id = props.id ? props.id : props.match.params.id;\n\n  if (id && !data) {\n    loadGreeting();\n  }\n\n  if (called && loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }\n  }, \"Loading1...\");\n  if (error) return `Error! ${error}`;\n\n  if (!called) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => loadGreeting(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"Load greeting\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, data.getItem.title), /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, data.getItem.text));\n});","map":{"version":3,"sources":["/Users/irisha/wikiup/client/src/components/item.js"],"names":["React","Typography","gql","useLazyQuery","GETITEM","props","console","log","id","loadGreeting","called","loading","error","data","variables","match","params","getItem","title","text"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AAEA,MAAMC,OAAO,GAAGF,GAAI;;;;;;;;;CAApB;AAWA,gBAAgBG,KAAD,IAAW;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AAEA,QAAM,CAAEC,YAAF,EAAgB;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,GAAhB,IAAoDV,YAAY,CAACC,OAAD,EAAU;AAC/EU,IAAAA,SAAS,EAAE;AAACN,MAAAA,EAAE,EAAEH,KAAK,CAACG,EAAN,GAAWH,KAAK,CAACG,EAAjB,GAAsBH,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBR;AAA9C;AADoE,GAAV,CAAtE;AAIA,MAAIA,EAAE,GAAGH,KAAK,CAACG,EAAN,GAAWH,KAAK,CAACG,EAAjB,GAAsBH,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBR,EAAlD;;AAEA,MAAGA,EAAE,IAAI,CAACK,IAAV,EAAe;AACdJ,IAAAA,YAAY;AACZ;;AAMD,MAAIC,MAAM,IAAIC,OAAd,EAAuB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACvB,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;;AACX,MAAI,CAACF,MAAL,EAAa;AACV,wBAAO;AAAQ,MAAA,OAAO,EAAE,MAAMD,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAGF,sBACO,uDACL,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEI,IAAI,CAACI,OAAL,CAAaC,KADf,CADK,eAIL,oBAAC,UAAD;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,YAAY,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,IAAI,CAACI,OAAL,CAAaE,IADf,CAJK,CADP;AAUA,CAlCD","sourcesContent":["\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { gql, useLazyQuery } from '@apollo/client';\n\nconst GETITEM = gql`\n\tquery GetItem($id: ID!) {\n\t\tgetItem(id: $id){\n\t\t\tid\n\t\t\ttitle\n\t\t\ttext\n\t\t\tsort\n\t\t}\n\t}\n`;\n\nexport default (props) => {\n\tconsole.log(id)\n\n\tconst [ loadGreeting, {called, loading, error, data}  ] = useLazyQuery(GETITEM, {\n\t\tvariables: {id: props.id ? props.id : props.match.params.id}\n\t});\n\n\tlet id = props.id ? props.id : props.match.params.id;\n\n\tif(id && !data){\n\t\tloadGreeting();\n\t}\n\n\n\n\n\n\tif (called && loading) return <p>Loading1...</p>\n\tif (error) return `Error! ${error}`;\n\tif (!called) {\n    return <button onClick={() => loadGreeting()}>Load greeting</button>\n  }\n\n\n\treturn(\n        <>\n\t\t\t<Typography variant=\"h4\" component=\"h3\" gutterBottom>\n\t\t\t\t{data.getItem.title}\n\t\t\t</Typography>\n\t\t\t<Typography paragraph gutterBottom>\n\t\t\t\t{data.getItem.text}\n\t\t\t</Typography>\n        </>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}