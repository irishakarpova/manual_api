{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/wikiup/client/src/components/item.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { gql, useQuery } from '@apollo/client';\nconst GETITEM = gql`\n\tquery getItem($id: ID) {\n\t\titem(id: $id){\n\t\t\tid\n\t\t\ttitle\n\t\t\ttext\n\t\t\tsort\n\t\t\tparentId\n\t\t}\n\n\t}\n`;\nexport default (({\n  id\n}, props) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GETITEM, {\n    variables: {\n      id\n    }\n  });\n  console.log(props);\n  if (error) return `Error! ${error}`;\n  const article = data ? data.getItem : null;\n  return article ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, article.title), /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, article.text)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, \"Loading...\");\n});","map":{"version":3,"sources":["/Users/irisha/wikiup/client/src/components/item.js"],"names":["React","Typography","gql","useQuery","GETITEM","id","props","loading","error","data","variables","console","log","article","getItem","title","text"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,OAAO,GAAGF,GAAI;;;;;;;;;;;CAApB;AAaA,gBAAe,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAASC,KAAT,KAAmB;AAEjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BN,QAAQ,CAACC,OAAD,EAAU;AACnDM,IAAAA,SAAS,EAAE;AAAEL,MAAAA;AAAF;AADwC,GAAV,CAA1C;AAKCM,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAED,MAAIE,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AAGX,QAAMK,OAAO,GAAGJ,IAAI,GAAGA,IAAI,CAACK,OAAR,GAAkB,IAAtC;AAEA,SAAOD,OAAO,gBACP,uDACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,CAACE,KADb,CADA,eAIA,oBAAC,UAAD;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,YAAY,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACG,IADb,CAJA,CADO,gBAUb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVD;AAYA,CA1BD","sourcesContent":["\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { gql, useQuery } from '@apollo/client';\n\nconst GETITEM = gql`\n\tquery getItem($id: ID) {\n\t\titem(id: $id){\n\t\t\tid\n\t\t\ttitle\n\t\t\ttext\n\t\t\tsort\n\t\t\tparentId\n\t\t}\n\n\t}\n`;\n\nexport default ({ id }, props) => {\n\n\tconst { loading, error, data  } = useQuery(GETITEM, {\n\t\tvariables: { id }\n\t});\n\n\t\n\t\tconsole.log(props)\n\t\n\tif (error) return `Error! ${error}`;\n\n\n\tconst article = data ? data.getItem : null;\n\n\treturn article ? (\n        <>\n        <Typography variant=\"h4\" component=\"h3\" gutterBottom>\n            {article.title}\n        </Typography>\n        <Typography paragraph gutterBottom>\n            {article.text}\n        </Typography>\n        </>\n\t) : (\n\t\t<div>Loading...</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}